{"ast":null,"code":"function UserRegister(firstname, lastname, mail, password) {\n  fetch(\"http://localhost:3001/register\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      firstname: firstnameReg,\n      lastname: lastnameReg,\n      mail: mailReg,\n      password: passwordReg\n    })\n  }).then(response => {\n    if (response.status === 500) {\n      setRegisterStatus(false);\n    } else if (response.status === 200) {\n      setRegisterStatus(true);\n      setSnackbar(true);\n    }\n  });\n  handleClose();\n}\n\n_c = UserRegister;\n\nfunction UserLogin(username, password) {\n  fetch(\"http://localhost:3001/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      mail: username,\n      password: password\n    })\n  }).then(response => {\n    if (response.status === 401) {\n      setLoginStatus(\"Email ou mot de passe incorrect\");\n    } else if (response.status === 200) {\n      setLoginStatus(\"Connecté !\");\n    }\n  });\n}\n\n_c2 = UserLogin;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UserRegister\");\n$RefreshReg$(_c2, \"UserLogin\");","map":{"version":3,"sources":["/Users/olivier/Documents/Lamster/lamster-test/src/actions.js"],"names":["UserRegister","firstname","lastname","mail","password","fetch","method","headers","body","JSON","stringify","firstnameReg","lastnameReg","mailReg","passwordReg","then","response","status","setRegisterStatus","setSnackbar","handleClose","UserLogin","username","setLoginStatus"],"mappings":"AAAA,SAASA,YAAT,CAAsBC,SAAtB,EAAiCC,QAAjC,EAA2CC,IAA3C,EAAiDC,QAAjD,EAA2D;AACvDC,EAAAA,KAAK,CAAC,gCAAD,EAAmC;AACpCC,IAAAA,MAAM,EAAE,MAD4B;AAEpCC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAF2B;AAKpCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBT,MAAAA,SAAS,EAAEU,YADM;AAEjBT,MAAAA,QAAQ,EAAEU,WAFO;AAGjBT,MAAAA,IAAI,EAAEU,OAHW;AAIjBT,MAAAA,QAAQ,EAAEU;AAJO,KAAf;AAL8B,GAAnC,CAAL,CAWGC,IAXH,CAWSC,QAAD,IAAc;AAClB,QAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBC,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,KAFD,MAEO,IAAIF,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAChCC,MAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAC,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH;AACJ,GAlBD;AAmBAC,EAAAA,WAAW;AACd;;KArBQpB,Y;;AAuBT,SAASqB,SAAT,CAAmBC,QAAnB,EAA6BlB,QAA7B,EAAuC;AACnCC,EAAAA,KAAK,CAAC,6BAAD,EAAgC;AACjCC,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBP,MAAAA,IAAI,EAAEmB,QADW;AAEjBlB,MAAAA,QAAQ,EAAEA;AAFO,KAAf;AAL2B,GAAhC,CAAL,CASGW,IATH,CASSC,QAAD,IAAc;AAClB,QAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AACzBM,MAAAA,cAAc,CAAC,iCAAD,CAAd;AACH,KAFD,MAEO,IAAIP,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAChCM,MAAAA,cAAc,CAAC,YAAD,CAAd;AACH;AACJ,GAfD;AAgBH;;MAjBQF,S","sourcesContent":["function UserRegister(firstname, lastname, mail, password) {\n    fetch(\"http://localhost:3001/register\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            firstname: firstnameReg,\n            lastname: lastnameReg,\n            mail: mailReg,\n            password: passwordReg,\n        }),\n    }).then((response) => {\n        if (response.status === 500) {\n            setRegisterStatus(false);\n        } else if (response.status === 200) {\n            setRegisterStatus(true);\n            setSnackbar(true);\n        }\n    });\n    handleClose();\n}\n\nfunction UserLogin(username, password) {\n    fetch(\"http://localhost:3001/login\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            mail: username,\n            password: password,\n        }),\n    }).then((response) => {\n        if (response.status === 401) {\n            setLoginStatus(\"Email ou mot de passe incorrect\");\n        } else if (response.status === 200) {\n            setLoginStatus(\"Connecté !\");\n        }\n    });\n}\n"]},"metadata":{},"sourceType":"module"}